[{"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\store.js":"2","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\App.js":"3","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\reducers\\productReducers.js":"4","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\reducers\\cartReducers.js":"5","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\reducers\\userReducers.js":"6","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\reducers\\orderReducers.js":"7","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\ConfirmOrder.js":"8","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\Home.js":"9","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Footer.js":"10","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Header.js":"11","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\Cart.js":"12","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\product\\ProductDetails.js":"13","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\Shipping.js":"14","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\Payment.js":"15","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\OrderSuccess.js":"16","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\order\\OrderDetails.js":"17","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\Login.js":"18","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\order\\ListOrders.js":"19","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\Register.js":"20","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\Profile.js":"21","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\UpdateProfile.js":"22","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\ForgotPassword.js":"23","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\UpdatePassword.js":"24","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\NewPassword.js":"25","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\ProductsList.js":"26","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\Dashboard.js":"27","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\NewProduct.js":"28","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\UpdateProduct.js":"29","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\ProcessOrder.js":"30","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\OrdersList.js":"31","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\UsersList.js":"32","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\UpdateUser.js":"33","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\ProductReviews.js":"34","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\route\\ProtectedRoute.js":"35","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\actions\\userActions.js":"36","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\MetaData.js":"37","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\CheckoutSteps.js":"38","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Loader.js":"39","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\BannerSlider .js":"40","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\product\\Product.js":"41","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\actions\\productActions.js":"42","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Search.js":"43","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Categories.js":"44","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\actions\\cartActions.js":"45","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\Sidebar.js":"46","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\actions\\orderActions.js":"47","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\constants\\orderConstants.js":"48","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\constants\\userConstants.js":"49","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\constants\\productConstants.js":"50","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\constants\\cartConstants.js":"51","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\review\\ListReviews.js":"52","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\data.js":"53","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\responsive.js":"54","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\CategoriesItem.js":"55","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Banner\\Banner.js":"56","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Category\\Category.js":"57","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Newsletter\\Newsletter.js":"58"},{"size":613,"mtime":1679047137712,"results":"59","hashOfConfig":"60"},{"size":1779,"mtime":1679138648991,"results":"61","hashOfConfig":"60"},{"size":4993,"mtime":1681548099561,"results":"62","hashOfConfig":"60"},{"size":7273,"mtime":1679047137715,"results":"63","hashOfConfig":"60"},{"size":2039,"mtime":1681369707189,"results":"64","hashOfConfig":"60"},{"size":6651,"mtime":1679047137715,"results":"65","hashOfConfig":"60"},{"size":4574,"mtime":1679047137714,"results":"66","hashOfConfig":"60"},{"size":3838,"mtime":1679047137676,"results":"67","hashOfConfig":"60"},{"size":17704,"mtime":1681547047485,"results":"68","hashOfConfig":"60"},{"size":3049,"mtime":1681554746392,"results":"69","hashOfConfig":"60"},{"size":3308,"mtime":1679053403026,"results":"70","hashOfConfig":"60"},{"size":4765,"mtime":1681374151508,"results":"71","hashOfConfig":"60"},{"size":10532,"mtime":1681373426017,"results":"72","hashOfConfig":"60"},{"size":4886,"mtime":1679047137680,"results":"73","hashOfConfig":"60"},{"size":5679,"mtime":1679047137679,"results":"74","hashOfConfig":"60"},{"size":1201,"mtime":1681369528146,"results":"75","hashOfConfig":"60"},{"size":3914,"mtime":1681372839763,"results":"76","hashOfConfig":"60"},{"size":3472,"mtime":1679047137701,"results":"77","hashOfConfig":"60"},{"size":2809,"mtime":1681372244379,"results":"78","hashOfConfig":"60"},{"size":5790,"mtime":1679047137704,"results":"79","hashOfConfig":"60"},{"size":2138,"mtime":1679047137703,"results":"80","hashOfConfig":"60"},{"size":5262,"mtime":1679047137706,"results":"81","hashOfConfig":"60"},{"size":2273,"mtime":1679047137699,"results":"82","hashOfConfig":"60"},{"size":3010,"mtime":1679047137705,"results":"83","hashOfConfig":"60"},{"size":3014,"mtime":1679047137701,"results":"84","hashOfConfig":"60"},{"size":3916,"mtime":1679047137666,"results":"85","hashOfConfig":"60"},{"size":5893,"mtime":1679047137659,"results":"86","hashOfConfig":"60"},{"size":8409,"mtime":1679047137660,"results":"87","hashOfConfig":"60"},{"size":9505,"mtime":1679047137668,"results":"88","hashOfConfig":"60"},{"size":6427,"mtime":1679047137664,"results":"89","hashOfConfig":"60"},{"size":3956,"mtime":1679047137662,"results":"90","hashOfConfig":"60"},{"size":3668,"mtime":1679047137671,"results":"91","hashOfConfig":"60"},{"size":4716,"mtime":1679047137670,"results":"92","hashOfConfig":"60"},{"size":5228,"mtime":1681364892141,"results":"93","hashOfConfig":"60"},{"size":951,"mtime":1679047137697,"results":"94","hashOfConfig":"60"},{"size":7758,"mtime":1679047137654,"results":"95","hashOfConfig":"60"},{"size":242,"mtime":1679054182467,"results":"96","hashOfConfig":"60"},{"size":1886,"mtime":1679047137674,"results":"97","hashOfConfig":"60"},{"size":143,"mtime":1679047137684,"results":"98","hashOfConfig":"60"},{"size":2716,"mtime":1681364948383,"results":"99","hashOfConfig":"60"},{"size":1084,"mtime":1681373435143,"results":"100","hashOfConfig":"60"},{"size":6806,"mtime":1681539609938,"results":"101","hashOfConfig":"60"},{"size":1050,"mtime":1679047137687,"results":"102","hashOfConfig":"60"},{"size":554,"mtime":1679111066472,"results":"103","hashOfConfig":"60"},{"size":2483,"mtime":1681369833508,"results":"104","hashOfConfig":"60"},{"size":1683,"mtime":1679047137667,"results":"105","hashOfConfig":"60"},{"size":3831,"mtime":1679047137652,"results":"106","hashOfConfig":"60"},{"size":1186,"mtime":1679047137709,"results":"107","hashOfConfig":"60"},{"size":2264,"mtime":1679047137711,"results":"108","hashOfConfig":"60"},{"size":1946,"mtime":1679047137710,"results":"109","hashOfConfig":"60"},{"size":324,"mtime":1681369734376,"results":"110","hashOfConfig":"60"},{"size":737,"mtime":1679047137696,"results":"111","hashOfConfig":"60"},{"size":2813,"mtime":1681361925058,"results":"112","hashOfConfig":"60"},{"size":177,"mtime":1679110128444,"results":"113","hashOfConfig":"60"},{"size":1149,"mtime":1679115789104,"results":"114","hashOfConfig":"60"},{"size":1239,"mtime":1681544189687,"results":"115","hashOfConfig":"60"},{"size":828,"mtime":1681545848609,"results":"116","hashOfConfig":"60"},{"size":1459,"mtime":1681546886931,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"uxfe1t",{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"120"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\index.js",[],["246","247"],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\store.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\App.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\Home.js",["248","249"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport Pagination from 'react-js-pagination'\r\nimport Slider from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport MetaData from './layout/MetaData'\r\nimport Product from './product/Product'\r\nimport Loader from './layout/Loader'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProducts } from '../actions/productActions'\r\nimport BannerSlider from './layout/BannerSlider ';\r\nimport Banner from './layout/Banner/Banner';\r\nimport Category from './layout/Category/Category';\r\nimport Newsletter from './layout/Newsletter/Newsletter';\r\n// import Categories from './layout/Categories';\r\n// import Footer from './layout/Footer';\r\n\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\nconst Home = ({ match }) => {\r\n    const location = useLocation();\r\nconst isHomePage = location.pathname === \"/\";\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 1000])\r\n    const [category, setCategory] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating])\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    \r\n                    <MetaData title={'Buy Best Products Online'} />\r\n                  \r\n                    {isHomePage ? (\r\n                        \r\n                                <> \r\n                                {/* <BannerSlider /> */}\r\n                                <Banner className=\"container mt-1\" />\r\n                                {/* <Categories/> */}\r\n                               \r\n                                <h1 id=\"products_heading\">Latest Products</h1>\r\n                                <section id=\"products\" className=\"container mt-5\">\r\n                                    <div className=\"row\">\r\n            \r\n                                        {keyword ? (\r\n                                            <Fragment>\r\n                                                <div className=\"col-6 col-md-3 mt-5 mb-5\">\r\n                                                    <div className=\"px-5\">\r\n                                                        <Range\r\n                                                            marks={{\r\n                                                                1: `$1`,\r\n                                                                1000: `$1000`\r\n                                                            }}\r\n                                                            min={1}\r\n                                                            max={1000}\r\n                                                            defaultValue={[1, 1000]}\r\n                                                            tipFormatter={value => `$${value}`}\r\n                                                            tipProps={{\r\n                                                                placement: \"top\",\r\n                                                                visible: true\r\n                                                            }}\r\n                                                            value={price}\r\n                                                            onChange={price => setPrice(price)}\r\n                                                        />\r\n            \r\n                                                        <hr className=\"my-5\" />\r\n            \r\n                                                        <div className=\"mt-5\">\r\n                                                            <h4 className=\"mb-3\">\r\n                                                                Categories\r\n                                                            </h4>\r\n            \r\n                                                            <ul className=\"pl-0\">\r\n                                                                {categories.map(category => (\r\n                                                                    <li\r\n                                                                        style={{\r\n                                                                            cursor: 'pointer',\r\n                                                                            listStyleType: 'none'\r\n                                                                        }}\r\n                                                                        key={category}\r\n                                                                        onClick={() => setCategory(category)}\r\n                                                                    >\r\n                                                                        {category}\r\n                                                                    </li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                        </div>\r\n            \r\n                                                        <hr className=\"my-3\" />\r\n            \r\n                                                        <div className=\"mt-5\">\r\n                                                            <h4 className=\"mb-3\">\r\n                                                                Ratings\r\n                                                            </h4>\r\n            \r\n                                                            <ul className=\"pl-0\">\r\n                                                                {[5, 4, 3, 2, 1].map(star => (\r\n                                                                    <li\r\n                                                                        style={{\r\n                                                                            cursor: 'pointer',\r\n                                                                            listStyleType: 'none'\r\n                                                                        }}\r\n                                                                        key={star}\r\n                                                                        onClick={() => setRating(star)}\r\n                                                                    >\r\n                                                                        <div className=\"rating-outer\">\r\n                                                                            <div className=\"rating-inner\"\r\n                                                                                style={{\r\n                                                                                    width: `${star * 20}%`\r\n                                                                                }}\r\n                                                                            >\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                        </div>\r\n            \r\n                                                    </div>\r\n                                                </div>\r\n            \r\n                                                <div className=\"col-6 col-md-9\">\r\n                                                    <div className=\"row\">\r\n                                                        {products.map(product => (\r\n                                                            <Product key={product._id} product={product} col={4} />\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                        ) : (\r\n                                                products.map(product => (\r\n                                                    <Product key={product._id} product={product} col={3} />\r\n                                                ))\r\n                                            )}\r\n            \r\n                                    </div>\r\n                                </section>\r\n                                <Newsletter />\r\n                                </>\r\n                            ) :  (\r\n                               <> <h1 id=\"products_heading\">Latest Products</h1>\r\n                                <section id=\"products\" className=\"container mt-5\">\r\n                                    <div className=\"row\">\r\n            \r\n                                        {keyword ? (\r\n                                            <Fragment>\r\n                                                <div className=\"col-6 col-md-3 mt-5 mb-5\">\r\n                                                    <div className=\"px-5\">\r\n                                                        <Range\r\n                                                            marks={{\r\n                                                                1: `$1`,\r\n                                                                1000: `$1000`\r\n                                                            }}\r\n                                                            min={1}\r\n                                                            max={1000}\r\n                                                            defaultValue={[1, 1000]}\r\n                                                            tipFormatter={value => `$${value}`}\r\n                                                            tipProps={{\r\n                                                                placement: \"top\",\r\n                                                                visible: true\r\n                                                            }}\r\n                                                            value={price}\r\n                                                            onChange={price => setPrice(price)}\r\n                                                        />\r\n            \r\n                                                        <hr className=\"my-5\" />\r\n            \r\n                                                        <div className=\"mt-5\">\r\n                                                            <h4 className=\"mb-3\">\r\n                                                                Categories\r\n                                                            </h4>\r\n            \r\n                                                            <ul className=\"pl-0\">\r\n                                                                {categories.map(category => (\r\n                                                                    <li\r\n                                                                        style={{\r\n                                                                            cursor: 'pointer',\r\n                                                                            listStyleType: 'none'\r\n                                                                        }}\r\n                                                                        key={category}\r\n                                                                        onClick={() => setCategory(category)}\r\n                                                                    >\r\n                                                                        {category}\r\n                                                                    </li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                        </div>\r\n            \r\n                                                        <hr className=\"my-3\" />\r\n            \r\n                                                        <div className=\"mt-5\">\r\n                                                            <h4 className=\"mb-3\">\r\n                                                                Ratings\r\n                                                            </h4>\r\n            \r\n                                                            <ul className=\"pl-0\">\r\n                                                                {[5, 4, 3, 2, 1].map(star => (\r\n                                                                    <li\r\n                                                                        style={{\r\n                                                                            cursor: 'pointer',\r\n                                                                            listStyleType: 'none'\r\n                                                                        }}\r\n                                                                        key={star}\r\n                                                                        onClick={() => setRating(star)}\r\n                                                                    >\r\n                                                                        <div className=\"rating-outer\">\r\n                                                                            <div className=\"rating-inner\"\r\n                                                                                style={{\r\n                                                                                    width: `${star * 20}%`\r\n                                                                                }}\r\n                                                                            >\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                        </div>\r\n            \r\n                                                    </div>\r\n                                                </div>\r\n            \r\n                                                <div className=\"col-6 col-md-9\">\r\n                                                    <div className=\"row\">\r\n                                                        {products.map(product => (\r\n                                                            <Product key={product._id} product={product} col={4} />\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                        ) : (\r\n                                                products.map(product => (\r\n                                                    <Product key={product._id} product={product} col={3} />\r\n                                                ))\r\n                                            )}\r\n            \r\n                                    </div>\r\n                                    \r\n                                </section>\r\n                               \r\n                                </>\r\n\r\n                            )}\r\n                   \r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5\">\r\n                            <Pagination\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={productsCount}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                        \r\n                    )}\r\n\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Footer.js",["250"],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Header.js",["251"],"import React, { Fragment } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nimport Search from './Search'\r\n\r\nimport '../../App.css'\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Logged out successfully.')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to=\"/\">\r\n                            <img src=\"/images/snapbuy.png\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n                    </Link>\r\n\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\Cart.js",["252"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\n// import { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n// import Footer from '../layout/Footer'\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.product}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => decreaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n     \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\product\\ProductDetails.js",["253"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\nimport ListReviews from '../review/ListReviews'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductDetails, newReview, clearErrors } from '../../actions/productActions'\r\nimport { addItemToCart ,incrementItemQuantity,decrementItemQuantity} from '../../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductDetails = ({ match }) => {\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, product, } = useSelector(state => state.productDetails)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error: reviewError, success } = useSelector(state => state.newReview)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetails(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (reviewError) {\r\n            alert.error(reviewError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Reivew posted successfully')\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, reviewError, match.params.id, success])\r\n\r\n    const addToCart = () => {\r\n        dispatch(addItemToCart(match.params.id, quantity));\r\n        alert.success('Item Added to Cart')\r\n    }\r\n    // Increment item quantity\r\n    const incrementQty = () => {\r\n        dispatch(incrementItemQuantity(match.params.id)); // Dispatch the incrementItemQuantity action with the product ID\r\n        setQuantity(quantity + 1); // Update local quantity state\r\n    }\r\n\r\n    // const increaseQty = () => {\r\n       \r\n    //     const count = document.querySelector('.count')\r\n    //     console.log(count.valueAsNumber + 1)\r\n\r\n    //     if (count.valueAsNumber >= product.stock) return;\r\n\r\n    //     const qty = count.valueAsNumber + 1 ;\r\n    //     setQuantity(qty)\r\n    // }\r\n\r\n    // const decreaseQty = () => {\r\n\r\n    //     const count = document.querySelector('.count')\r\n\r\n    //     if (count.valueAsNumber <= 1) return;\r\n\r\n    //     const qty = count.valueAsNumber - 1;\r\n    //     setQuantity(qty)\r\n\r\n    // }\r\n    // Decrement item quantity\r\nconst decrementQty = () => {\r\n    if (quantity == 1) return;\r\n  \r\n    dispatch(decrementItemQuantity(match.params.id)); // Dispatch the decrementItemQuantity action with the product ID\r\n    setQuantity(quantity - 1); // Update local quantity state\r\n  }\r\n\r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n\r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n\r\n                        setRating(this.starValue)\r\n                    } else {\r\n                        star.classList.remove('orange')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const reviewHandler = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.set('rating', rating);\r\n        formData.set('comment', comment);\r\n        formData.set('productId', match.params.id);\r\n\r\n        dispatch(newReview(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={product.name} />\r\n                    <div className=\"row d-flex justify-content-around\">\r\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n                            <Carousel pause='hover'>\r\n                                {product.images && product.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={product.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-5 mt-5\">\r\n                            <h3>{product.name}</h3>\r\n                            <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"rating-outer\">\r\n                                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                            </div>\r\n                            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n                            <hr />\r\n\r\n                            <p id=\"product_price\">$ {product.price}</p>\r\n                            <div className=\"stockCounter d-inline\">\r\n                                <span className=\"btn btn-danger minus\" onClick={decrementQty}>-</span>\r\n\r\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\r\n\r\n                                <span className=\"btn btn-primary plus\" onClick={incrementQty}>+</span>\r\n                            </div>\r\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button>\r\n\r\n                            <hr />\r\n\r\n                            <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'} >{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Description:</h4>\r\n                            <p>{product.description}</p>\r\n                            <hr />\r\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\r\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n                                Submit Your Review\r\n                            </button>\r\n                                :\r\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>\r\n                            }\r\n\r\n\r\n                            <div className=\"row mt-2 mb-5\">\r\n                                <div className=\"rating w-50\">\r\n\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n\r\n                                                    <ul className=\"stars\" >\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                    </ul>\r\n\r\n                                                    <textarea\r\n                                                        name=\"review\"\r\n                                                        id=\"review\" className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    >\r\n\r\n                                                    </textarea>\r\n\r\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {product.reviews && product.reviews.length > 0 && (\r\n                        <ListReviews reviews={product.reviews} />\r\n                    )}\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductDetails\r\n","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\Shipping.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\Payment.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\order\\OrderDetails.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\Login.js",["254"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Login'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Login</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    LOGIN\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\order\\ListOrders.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\Register.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\UpdateProfile.js",["255"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\ForgotPassword.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\UpdatePassword.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\user\\NewPassword.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\ProductsList.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\Dashboard.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\NewProduct.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\OrdersList.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\UsersList.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\UpdateUser.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\ProductReviews.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\BannerSlider .js",["256"],"import { ArrowLeftOutlined, ArrowRightOutlined } from '@mui/icons-material'\r\nimport React, { useState } from 'react'\r\n// import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport {sliderItems} from '../../data'\r\nimport { mobile } from '../../responsive'\r\n\r\n\r\nconst Container =styled.div`\r\nwidth:137%;\r\nheight:100vh;\r\ndisplay:flex;\r\nmargin-left: -207px;\r\nposition:relative;\r\noverflow:hidden;\r\n${mobile({ display: \"none\" })}\r\n`\r\nconst Arrow =styled.div`\r\nwidth:50px;\r\nheight:50px;\r\nbackground-color:#fff7f7;\r\nborder-radius:50%;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\nposition:absolute;\r\ntop:0;\r\nbottom:0;\r\nleft:${props=> props.direction ===\"left\" && \"10px\"};\r\nright:${props=> props.direction ===\"right\" && \"10px\"};\r\nmargin:auto;\r\ncursor:pointer;\r\nopacity:0.5;\r\nz-index:2;\r\n`\r\nconst Wrapper =styled.div`\r\n height:100%;\r\n display:flex;\r\n transition: all 1.5s ease;\r\n transform:translate(${(props) => props.slideIndex * -100}vw);\r\n `\r\n\r\n const Slide =styled.div` \r\n width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color:#${props=>props.bg};\r\n `\r\n const ImgContainer =styled.div`\r\n height:100%;\r\n flex:1;`\r\n const InfoContainer =styled.div`flex:1;\r\n\r\n padding:50px;`\r\n const Image=styled.img`\r\n height:100%`\r\n\r\n const Title = styled.h1`\r\n font-size:40px;\r\n`;\r\n\r\nconst Desc = styled.p`\r\n margin: 50px 0px;\r\n font-size: 20px;\r\n font-weight: 500;\r\n letter-spacing: 3px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n padding: 10px;\r\n font-size: 20px;\r\n background-color: transparent;\r\n cursor: pointer;\r\n`;\r\n\r\nconst BannerSlider  = () => {\r\n  const [slideIndex, setSlideIndex] = useState(0)\r\n  const handleClick = (direction) => {\r\n      if (direction === \"left\") {\r\n          setSlideIndex(slideIndex > 0 ? slideIndex - 1 : 2);\r\n        } else {\r\n          setSlideIndex(slideIndex < 2 ? slideIndex + 1 : 0);\r\n        }\r\n  }\r\n  return (\r\n    <Container>\r\n    <Arrow direction=\"left\" onClick={() => handleClick(\"left\")}>\r\n       <ArrowLeftOutlined/>\r\n    </Arrow>\r\n    <Wrapper slideIndex={slideIndex}>\r\n       {sliderItems.map((items) => (\r\n       <Slide bg={items.bg} key={items.id} >\r\n       <ImgContainer>\r\n         <Image src={items.img}/>\r\n         \r\n       </ImgContainer>\r\n       <InfoContainer>\r\n         <Title>{items.title}</Title>\r\n         <Desc>{items.desc}</Desc>\r\n         \r\n         {/* <Button><Link to={`/search/${items.title}`}>SHOP NOW</Link></Button> */}\r\n       </InfoContainer>\r\n      \r\n       </Slide>\r\n      ) )}\r\n       \r\n    \r\n    </Wrapper>\r\n    <Arrow direction=\"right\" onClick={() => handleClick(\"right\")}>\r\n       <ArrowRightOutlined/>\r\n    </Arrow>\r\n\r\n   </Container>\r\n  )\r\n}\r\n\r\nexport default BannerSlider ","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\product\\Product.js",["257"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Product = ({ product, col }) => {\r\n    return (\r\n        <>\r\n        \r\n         <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n\r\n<div className=\"card p-3 rounded\">\r\n    <img\r\n        className=\"card-img-top mx-auto\"\r\n        src={product.images[0].url}\r\n    />\r\n    <div className=\"card-body d-flex flex-column\">\r\n        <h5 className=\"card-title\">\r\n            <Link to={`/product/${product._id}`}>{product.name}</Link>\r\n        </h5>\r\n        <div className=\"ratings mt-auto\">\r\n            <div className=\"rating-outer\">\r\n                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n            </div>\r\n            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n        </div>\r\n        <p className=\"card-text\">$ {product.price}</p>\r\n        <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n    </div>\r\n</div>\r\n</div>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Categories.js",[],["258","259"],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\admin\\Sidebar.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\review\\ListReviews.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\data.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\responsive.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\CategoriesItem.js",[],"C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Banner\\Banner.js",["260","261"],"import React from \"react\";\r\n\r\nimport \"./Banner.scss\";\r\nimport BannerImg from \"../../../assets/banner-img.png\";\r\nconst domainName = window.location.hostname;\r\nconst handleButtonClick = () => {\r\n    // Your logic for handling button click\r\n    // Redirect to the desired URL\r\n    window.location.href = \"http://localhost:3000/product/6437bcd8560246e64fd8709b\";\r\n};\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <div className=\"hero-banner\">\r\n            <div className=\"content\">\r\n                <div className=\"text-content\">\r\n                    <h1>SALES</h1>\r\n                    <p>\r\n                        Convallis interdum purus adipiscing dis parturient\r\n                        posuere ac a quam a eleifend montes parturient posuere\r\n                        curae tempor\r\n                    </p>\r\n                    <div className=\"ctas\">\r\n                        <div className=\"banner-cta\" onClick={handleButtonClick}>Read More</div>\r\n                        <div className=\"banner-cta v2\" onClick={handleButtonClick}>Shop Now</div>\r\n                    </div>\r\n                </div>\r\n                <img className=\"banner-img\" src={BannerImg} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Banner;","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Category\\Category.js",["262"],"import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport \"./Category.scss\";\r\nimport categoriesData from \"./categories.json\"; // Update the path to your JSON file\r\n\r\nconst Category = () => {\r\n  const { id } = useParams();\r\n\r\n  // Find the category data in the categories.json file based on the id parameter\r\n  const category = categoriesData.find(\r\n    (category) => category.id === Number(id)\r\n  );\r\n\r\n  // Extract only the necessary data from the category object\r\n  const { title, products } = category?.attributes || {};\r\n\r\n  return (\r\n    <div className=\"category-main-content\">\r\n      <div className=\"layout\">\r\n        <div className=\"category-title\">{title}</div>\r\n        {/* <Products innerPage={true} products={products} /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","C:\\Users\\PC\\Desktop\\ffff\\snapbuy\\frontend\\src\\components\\layout\\Newsletter\\Newsletter.js",[],{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":14,"column":8,"nodeType":"269","messageId":"270","endLine":14,"endColumn":20},{"ruleId":"267","severity":1,"message":"271","line":16,"column":8,"nodeType":"269","messageId":"270","endLine":16,"endColumn":16},{"ruleId":"272","severity":1,"message":"273","line":57,"column":21,"nodeType":"274","endLine":57,"endColumn":42},{"ruleId":"272","severity":1,"message":"273","line":30,"column":29,"nodeType":"274","endLine":30,"endColumn":62},{"ruleId":"267","severity":1,"message":"275","line":21,"column":11,"nodeType":"269","messageId":"270","endLine":21,"endColumn":22},{"ruleId":"276","severity":1,"message":"277","line":81,"column":18,"nodeType":"278","messageId":"279","endLine":81,"endColumn":20},{"ruleId":"280","severity":1,"message":"281","line":34,"column":8,"nodeType":"282","endLine":34,"endColumn":58,"suggestions":"283"},{"ruleId":"280","severity":1,"message":"284","line":47,"column":8,"nodeType":"282","endLine":47,"endColumn":52,"suggestions":"285"},{"ruleId":"267","severity":1,"message":"286","line":70,"column":7,"nodeType":"269","messageId":"270","endLine":70,"endColumn":13},{"ruleId":"272","severity":1,"message":"273","line":12,"column":5,"nodeType":"274","endLine":15,"endColumn":7},{"ruleId":"263","replacedBy":"287"},{"ruleId":"265","replacedBy":"288"},{"ruleId":"267","severity":1,"message":"289","line":5,"column":7,"nodeType":"269","messageId":"270","endLine":5,"endColumn":17},{"ruleId":"272","severity":1,"message":"273","line":28,"column":17,"nodeType":"274","endLine":28,"endColumn":63},{"ruleId":"267","severity":1,"message":"290","line":16,"column":18,"nodeType":"269","messageId":"270","endLine":16,"endColumn":26},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'BannerSlider' is defined but never used.","Identifier","unusedVar","'Category' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'increaseQty' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["293"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["294"],"'Button' is assigned a value but never used.",["291"],["292"],"'domainName' is assigned a value but never used.","'products' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"299","text":"300"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"301","text":"302"},[947,997],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1365,1409],"[dispatch, alert, error, history, isUpdated, user]"]