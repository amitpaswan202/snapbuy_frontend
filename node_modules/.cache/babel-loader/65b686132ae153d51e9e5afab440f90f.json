{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ffff\\\\snapbuy\\\\frontend\\\\src\\\\components\\\\admin\\\\UsersList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../layout/MetaData';\nimport Loader from '../layout/Loader';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions';\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = _ref => {\n  _s();\n  let {\n    history\n  } = _ref;\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    users\n  } = useSelector(state => state.allUsers);\n  const {\n    isDeleted\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch(allUsers());\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (isDeleted) {\n      alert.success('User deleted successfully');\n      history.push('/admin/users');\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n  }, [dispatch, alert, error, isDeleted, history]);\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n  const setUsers = () => {\n    const data = {\n      columns: [{\n        label: 'User ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc'\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc'\n      }, {\n        label: 'Role',\n        field: 'role',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    users.forEach(user => {\n      data.rows.push({\n        id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        actions: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/user/${user._id}`,\n            className: \"btn btn-primary py-1 px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger py-1 px-2 ml-2\",\n            onClick: () => deleteUserHandler(user._id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 26\n        }, this)\n      });\n    });\n    return data;\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'All Users'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-5\",\n            children: \"All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n            data: setUsers(),\n            className: \"px-3\",\n            bordered: true,\n            striped: true,\n            hover: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(UsersList, \"Y04wUDJmFcgGjJIIVQw3/P3HcoI=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","Fragment","useEffect","Link","MDBDataTable","MetaData","Loader","Sidebar","useAlert","useDispatch","useSelector","allUsers","deleteUser","clearErrors","DELETE_USER_RESET","jsxDEV","_jsxDEV","UsersList","_ref","_s","history","alert","dispatch","loading","error","users","state","isDeleted","user","success","push","type","deleteUserHandler","id","setUsers","data","columns","label","field","sort","rows","forEach","_id","name","email","role","actions","children","to","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","bordered","striped","hover","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ffff/snapbuy/frontend/src/components/admin/UsersList.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\r\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\r\n\r\nconst UsersList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.allUsers);\r\n    const { isDeleted } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('User deleted successfully');\r\n            history.push('/admin/users');\r\n            dispatch({ type: DELETE_USER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isDeleted, history])\r\n\r\n    const deleteUserHandler = (id) => {\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'User ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        users.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Users'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Users</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setUsers()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,YAAY,QAAQ,UAAU;AAEvC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,OAAO,MAAM,WAAW;AAE/B,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAQ,2BAA2B;AAC7E,SAASC,iBAAiB,QAAQ,+BAA+B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,SAAS,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAE1B,MAAMG,KAAK,GAAGb,QAAQ,EAAE;EACxB,MAAMc,QAAQ,GAAGb,WAAW,EAAE;EAE9B,MAAM;IAAEc,OAAO;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACf,QAAQ,CAAC;EACtE,MAAM;IAAEgB;EAAU,CAAC,GAAGjB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACE,IAAI,CAAC;EAEtD1B,SAAS,CAAC,MAAM;IACZoB,QAAQ,CAACX,QAAQ,EAAE,CAAC;IAEpB,IAAIa,KAAK,EAAE;MACPH,KAAK,CAACG,KAAK,CAACA,KAAK,CAAC;MAClBF,QAAQ,CAACT,WAAW,EAAE,CAAC;IAC3B;IAEA,IAAIc,SAAS,EAAE;MACXN,KAAK,CAACQ,OAAO,CAAC,2BAA2B,CAAC;MAC1CT,OAAO,CAACU,IAAI,CAAC,cAAc,CAAC;MAC5BR,QAAQ,CAAC;QAAES,IAAI,EAAEjB;MAAkB,CAAC,CAAC;IACzC;EAEJ,CAAC,EAAE,CAACQ,QAAQ,EAAED,KAAK,EAAEG,KAAK,EAAEG,SAAS,EAAEP,OAAO,CAAC,CAAC;EAEhD,MAAMY,iBAAiB,GAAIC,EAAE,IAAK;IAC9BX,QAAQ,CAACV,UAAU,CAACqB,EAAE,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMC,IAAI,GAAG;MACTC,OAAO,EAAE,CACL;QACIC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE;MACV,CAAC,EACD;QACIF,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE;MACV,CAAC,EACD;QACIF,KAAK,EAAE,OAAO;QACdC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE;MACV,CAAC,EACD;QACIF,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE;MACV,CAAC,EACD;QACIF,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE;MACX,CAAC,CACJ;MACDE,IAAI,EAAE;IACV,CAAC;IAEDf,KAAK,CAACgB,OAAO,CAACb,IAAI,IAAI;MAClBO,IAAI,CAACK,IAAI,CAACV,IAAI,CAAC;QACXG,EAAE,EAAEL,IAAI,CAACc,GAAG;QACZC,IAAI,EAAEf,IAAI,CAACe,IAAI;QACfC,KAAK,EAAEhB,IAAI,CAACgB,KAAK;QACjBC,IAAI,EAAEjB,IAAI,CAACiB,IAAI;QAEfC,OAAO,eAAE9B,OAAA,CAACf,QAAQ;UAAA8C,QAAA,gBACd/B,OAAA,CAACb,IAAI;YAAC6C,EAAE,EAAG,eAAcpB,IAAI,CAACc,GAAI,EAAE;YAACO,SAAS,EAAC,2BAA2B;YAAAF,QAAA,eACtE/B,OAAA;cAAGiC,SAAS,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAK;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC7B,eACPrC,OAAA;YAAQiC,SAAS,EAAC,+BAA+B;YAACK,OAAO,EAAEA,CAAA,KAAMtB,iBAAiB,CAACJ,IAAI,CAACc,GAAG,CAAE;YAAAK,QAAA,eACzF/B,OAAA;cAAGiC,SAAS,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAK;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC1B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEjB,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,OAAOlB,IAAI;EACf,CAAC;EAGD,oBACInB,OAAA,CAACf,QAAQ;IAAA8C,QAAA,gBACL/B,OAAA,CAACX,QAAQ;MAACkD,KAAK,EAAE;IAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChCrC,OAAA;MAAKiC,SAAS,EAAC,KAAK;MAAAF,QAAA,gBAChB/B,OAAA;QAAKiC,SAAS,EAAC,iBAAiB;QAAAF,QAAA,eAC5B/B,OAAA,CAACT,OAAO;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT,eAENrC,OAAA;QAAKiC,SAAS,EAAC,kBAAkB;QAAAF,QAAA,eAC7B/B,OAAA,CAACf,QAAQ;UAAA8C,QAAA,gBACL/B,OAAA;YAAIiC,SAAS,EAAC,MAAM;YAAAF,QAAA,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,EAElC9B,OAAO,gBAAGP,OAAA,CAACV,MAAM;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,gBACjBrC,OAAA,CAACZ,YAAY;YACT+B,IAAI,EAAED,QAAQ,EAAG;YACjBe,SAAS,EAAC,MAAM;YAChBO,QAAQ;YACRC,OAAO;YACPC,KAAK;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEZ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEM;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEC;AAEnB,CAAC;AAAAlC,EAAA,CA7GKF,SAAS;EAAA,QAEGT,QAAQ,EACLC,WAAW,EAEMC,WAAW,EACvBA,WAAW;AAAA;AAAAiD,EAAA,GAN/B1C,SAAS;AA+Gf,eAAeA,SAAS;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}