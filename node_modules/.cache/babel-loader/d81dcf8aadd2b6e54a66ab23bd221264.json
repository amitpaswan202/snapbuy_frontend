{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ffff\\\\snapbuy\\\\snapbuy\\\\frontend\\\\src\\\\components\\\\user\\\\NewPassword.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaData from '../layout/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetPassword, clearErrors } from '../../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPassword = _ref => {\n  _s();\n  let {\n    history,\n    match\n  } = _ref;\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useSelector(state => state.forgotPassword);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (success) {\n      alert.success('Password updated successfully');\n      history.push('/login');\n    }\n  }, [dispatch, alert, error, success, history]);\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('password', password);\n    formData.set('confirmPassword', confirmPassword);\n    dispatch(resetPassword(match.params.token, formData));\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'New Password Reset'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"shadow-lg\",\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mb-3\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password_field\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password_field\",\n              className: \"form-control\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirm_password_field\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirm_password_field\",\n              className: \"form-control\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"new_password_button\",\n            type: \"submit\",\n            className: \"btn btn-block py-3\",\n            children: \"Set Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPassword, \"XabZMzwXcJiB0CKE9OJtFsyeGxQ=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n_c = NewPassword;\nexport default NewPassword;\nvar _c;\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","MetaData","useAlert","useDispatch","useSelector","resetPassword","clearErrors","jsxDEV","_jsxDEV","NewPassword","_ref","_s","history","match","password","setPassword","confirmPassword","setConfirmPassword","alert","dispatch","error","success","state","forgotPassword","push","submitHandler","e","preventDefault","formData","FormData","set","params","token","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ffff/snapbuy/snapbuy/frontend/src/components/user/NewPassword.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { resetPassword, clearErrors } from '../../actions/userActions'\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, success } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Password updated successfully')\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n\r\n        dispatch(resetPassword(match.params.token, formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'New Password Reset'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">New Password</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"confirm_password_field\"\r\n                                className=\"form-control\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"new_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\">\r\n                            Set Password\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}