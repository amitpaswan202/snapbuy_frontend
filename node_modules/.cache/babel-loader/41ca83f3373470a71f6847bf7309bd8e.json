{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ffff\\\\snapbuy\\\\frontend\\\\src\\\\components\\\\layout\\\\Category\\\\Category.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Products from \"../Products/Products\";\nimport \"./Category.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  var _data$data, _data$data$, _data$data$$attribute, _data$data$$attribute2, _data$data$$attribute3, _data$data$$attribute4, _data$data$$attribute5;\n  const {\n    id\n  } = useParams();\n  // Replace useFetch with your actual fetch logic to retrieve data from the server\n  const data = null; // Update this with your fetched data\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-main-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-title\",\n        children: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$ = _data$data[0]) === null || _data$data$ === void 0 ? void 0 : (_data$data$$attribute = _data$data$.attributes) === null || _data$data$$attribute === void 0 ? void 0 : (_data$data$$attribute2 = _data$data$$attribute.categories) === null || _data$data$$attribute2 === void 0 ? void 0 : (_data$data$$attribute3 = _data$data$$attribute2.data) === null || _data$data$$attribute3 === void 0 ? void 0 : (_data$data$$attribute4 = _data$data$$attribute3[0]) === null || _data$data$$attribute4 === void 0 ? void 0 : (_data$data$$attribute5 = _data$data$$attribute4.attributes) === null || _data$data$$attribute5 === void 0 ? void 0 : _data$data$$attribute5.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Products, {\n        innerPage: true,\n        products: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Category, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useParams","Products","jsxDEV","_jsxDEV","Category","_s","_data$data","_data$data$","_data$data$$attribute","_data$data$$attribute2","_data$data$$attribute3","_data$data$$attribute4","_data$data$$attribute5","id","data","className","children","attributes","categories","title","fileName","_jsxFileName","lineNumber","columnNumber","innerPage","products","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ffff/snapbuy/frontend/src/components/layout/Category/Category.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Products from \"../Products/Products\";\r\nimport \"./Category.scss\";\r\n\r\nconst Category = () => {\r\n  const { id } = useParams();\r\n  // Replace useFetch with your actual fetch logic to retrieve data from the server\r\n  const data = null; // Update this with your fetched data\r\n\r\n  return (\r\n    <div className=\"category-main-content\">\r\n      <div className=\"layout\">\r\n        <div className=\"category-title\">\r\n          {data?.data?.[0]?.attributes?.categories?.data?.[0]?.attributes?.title}\r\n        </div>\r\n        <Products innerPage={true} products={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,UAAA,EAAAC,WAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGb,SAAS,EAAE;EAC1B;EACA,MAAMc,IAAI,GAAG,IAAI,CAAC,CAAC;;EAEnB,oBACEX,OAAA;IAAKY,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACpCb,OAAA;MAAKY,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBb,OAAA;QAAKY,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BF,IAAI,aAAJA,IAAI,wBAAAR,UAAA,GAAJQ,IAAI,CAAEA,IAAI,cAAAR,UAAA,wBAAAC,WAAA,GAAVD,UAAA,CAAa,CAAC,CAAC,cAAAC,WAAA,wBAAAC,qBAAA,GAAfD,WAAA,CAAiBU,UAAU,cAAAT,qBAAA,wBAAAC,sBAAA,GAA3BD,qBAAA,CAA6BU,UAAU,cAAAT,sBAAA,wBAAAC,sBAAA,GAAvCD,sBAAA,CAAyCK,IAAI,cAAAJ,sBAAA,wBAAAC,sBAAA,GAA7CD,sBAAA,CAAgD,CAAC,CAAC,cAAAC,sBAAA,wBAAAC,sBAAA,GAAlDD,sBAAA,CAAoDM,UAAU,cAAAL,sBAAA,uBAA9DA,sBAAA,CAAgEO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClE,eACNpB,OAAA,CAACF,QAAQ;QAACuB,SAAS,EAAE,IAAK;QAACC,QAAQ,EAAEX;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACzC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAClB,EAAA,CAfID,QAAQ;EAAA,QACGJ,SAAS;AAAA;AAAA0B,EAAA,GADpBtB,QAAQ;AAiBd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}